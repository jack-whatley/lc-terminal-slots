name: 'CI'

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: TestTagOutput
        run: | 
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0
      - name: NuGet Restore
        run: nuget restore LCTerminalSlots.sln
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore Dependencies
        run: dotnet restore
      - name: Build DLL
        run: dotnet build --no-restore
      - name: Test Build
        run: dotnet test --no-build --verbosity normal
      - name: Build Release
        run: dotnet build .\LCTerminalSlots\LCTerminalSlots.csproj --no-restore -c Release -o ./Output
      - name: Create Release
        id: created_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Lethal Company Gambling Mod ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Mod DLL
        id: uploaded_release_asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.created_release.outputs.upload_url }}
          asset_path: ./Output/LCTerminalSlots.dll
          asset_name: lcterminalslots-${{ github.ref_name }}.dll
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload Mod DLL
        id: uploaded_release_dependency
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.created_release.outputs.upload_url }}
          asset_path: ./Output/LethalAPI.Terminal.dll
          asset_name: LethalAPI.Terminal.dll
          asset_content_type: application/vnd.microsoft.portable-executable
